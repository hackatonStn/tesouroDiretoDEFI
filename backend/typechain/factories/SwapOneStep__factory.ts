/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SwapOneStep, SwapOneStepInterface } from "../SwapOneStep";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RealDigital",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "senderNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiverNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract RealTokenizado",
        name: "tokenSender",
        type: "address",
      },
      {
        internalType: "contract RealTokenizado",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d3b380380610d3b833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b610c12806101296000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636012856e14610030575b600080fd5b61004a6004803603810190610045919061084b565b61004c565b005b8373ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9336040518263ffffffff1660e01b815260040161008591906108c1565b602060405180830381865afa1580156100a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c69190610914565b610105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc9061099e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9836040518263ffffffff1660e01b815260040161013e91906108c1565b602060405180830381865afa15801561015b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017f9190610914565b6101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590610a0a565b60405180910390fd5b808473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101f891906108c1565b602060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102399190610a3f565b101561027a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027190610ab8565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e99190610aed565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610aed565b73ffffffffffffffffffffffffffffffffffffffff160361040d578373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016103c4929190610b29565b6020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610914565b50610653565b8373ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401610448929190610b29565b600060405180830381600087803b15801561046257600080fd5b505af1158015610476573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b8573ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610aed565b8573ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610aed565b846040518463ffffffff1660e01b81526004016105b393929190610b52565b600060405180830381600087803b1580156105cd57600080fd5b505af11580156105e1573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401610620929190610b29565b600060405180830381600087803b15801561063a57600080fd5b505af115801561064e573d6000803e3d6000fd5b505050505b7f3155b4536e4ae4b109dd4a9a4a81692cd1a0870195da68d6e2a94c5eb1fbf37e8473ffffffffffffffffffffffffffffffffffffffff1663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e39190610a3f565b8473ffffffffffffffffffffffffffffffffffffffff1663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190610a3f565b338585604051610766959493929190610b89565b60405180910390a150505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a482610779565b9050919050565b60006107b682610799565b9050919050565b6107c6816107ab565b81146107d157600080fd5b50565b6000813590506107e3816107bd565b92915050565b6107f281610799565b81146107fd57600080fd5b50565b60008135905061080f816107e9565b92915050565b6000819050919050565b61082881610815565b811461083357600080fd5b50565b6000813590506108458161081f565b92915050565b6000806000806080858703121561086557610864610774565b5b6000610873878288016107d4565b9450506020610884878288016107d4565b935050604061089587828801610800565b92505060606108a687828801610836565b91505092959194509250565b6108bb81610799565b82525050565b60006020820190506108d660008301846108b2565b92915050565b60008115159050919050565b6108f1816108dc565b81146108fc57600080fd5b50565b60008151905061090e816108e8565b92915050565b60006020828403121561092a57610929610774565b5b6000610938848285016108ff565b91505092915050565b600082825260208201905092915050565b7f53656e646572206d757374206265207061727469636970616e74000000000000600082015250565b6000610988601a83610941565b915061099382610952565b602082019050919050565b600060208201905081810360008301526109b78161097b565b9050919050565b7f5265636569766572206d757374206265207061727469636970616e7400000000600082015250565b60006109f4601c83610941565b91506109ff826109be565b602082019050919050565b60006020820190508181036000830152610a23816109e7565b9050919050565b600081519050610a398161081f565b92915050565b600060208284031215610a5557610a54610774565b5b6000610a6384828501610a2a565b91505092915050565b7f53616c646f20696e737566696369656e74650000000000000000000000000000600082015250565b6000610aa2601283610941565b9150610aad82610a6c565b602082019050919050565b60006020820190508181036000830152610ad181610a95565b9050919050565b600081519050610ae7816107e9565b92915050565b600060208284031215610b0357610b02610774565b5b6000610b1184828501610ad8565b91505092915050565b610b2381610815565b82525050565b6000604082019050610b3e60008301856108b2565b610b4b6020830184610b1a565b9392505050565b6000606082019050610b6760008301866108b2565b610b7460208301856108b2565b610b816040830184610b1a565b949350505050565b600060a082019050610b9e6000830188610b1a565b610bab6020830187610b1a565b610bb860408301866108b2565b610bc560608301856108b2565b610bd26080830184610b1a565b969550505050505056fea2646970667358221220d18555696165790b9407f45edd5d69a9e38fe335c08505af45b1ca3675e0325764736f6c63430008140033";

type SwapOneStepConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapOneStepConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapOneStep__factory extends ContractFactory {
  constructor(...args: SwapOneStepConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token, overrides || {});
  }
  override deploy(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token, overrides || {}) as Promise<
      SwapOneStep & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapOneStep__factory {
    return super.connect(runner) as SwapOneStep__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapOneStepInterface {
    return new Interface(_abi) as SwapOneStepInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapOneStep {
    return new Contract(address, _abi, runner) as unknown as SwapOneStep;
  }
}
