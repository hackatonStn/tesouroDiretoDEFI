/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITesouroDireto,
  ITesouroDiretoInterface,
} from "../../contracts/ITesouroDireto";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokenA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountRealTokenizado",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountLiquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveReal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupplyLP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ITesouroDireto.LiquidityPool",
        name: "pool",
        type: "tuple",
      },
    ],
    name: "newLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isTokenAToRealDigital",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "swapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityPoolID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
    ],
    name: "addLiquidtyPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "realTokenizadoAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveReal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupplyLP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct ITesouroDireto.LiquidityPool",
        name: "pool",
        type: "tuple",
      },
    ],
    name: "calculateLiquidityTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialPriceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "createLiquidtyPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveReal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupplyLP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct ITesouroDireto.LiquidityPool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isTokenAToRealDigital",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITesouroDireto__factory {
  static readonly abi = _abi;
  static createInterface(): ITesouroDiretoInterface {
    return new Interface(_abi) as ITesouroDiretoInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITesouroDireto {
    return new Contract(address, _abi, runner) as unknown as ITesouroDireto;
  }
}
