"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyDictionary__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract RealDigital",
                name: "token",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "KeyRequested",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_taxId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_bankNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_account",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_branch",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_wallet",
                type: "address",
            },
        ],
        name: "addAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "authorizeKey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getCustomerData",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "taxId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bankNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "account",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "branch",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "wallet",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "registered",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                ],
                internalType: "struct KeyDictionary.CustomerData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "getKey",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getWallet",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_taxId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_bankNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_account",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_branch",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_wallet",
                type: "address",
            },
        ],
        name: "requestKey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_taxId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_bankNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_account",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_branch",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_wallet",
                type: "address",
            },
        ],
        name: "updateData",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162001a6538038062001a658339818101604052810190620000379190620000fc565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b6000620000c482620000a3565b9050919050565b620000d681620000b7565b8114620000e257600080fd5b50565b600081519050620000f681620000cb565b92915050565b6000602082840312156200011557620001146200007e565b5b60006200012584828501620000e5565b91505092915050565b611927806200013e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806393790f441161005b57806393790f44146100fe578063a33c9a361461012e578063c82d5d861461014a578063e9c1d83d146101665761007d565b80633034554314610082578063789d392a1461009e57806382007af1146100ce575b600080fd5b61009c600480360381019061009791906111d2565b610182565b005b6100b860048036038101906100b3919061125f565b61055e565b6040516100c5919061129b565b60405180910390f35b6100e860048036038101906100e3919061125f565b61059e565b6040516100f5919061137d565b60405180910390f35b61011860048036038101906101139190611398565b6106ba565b60405161012591906113d4565b60405180910390f35b610148600480360381019061014391906111d2565b610703565b005b610164600480360381019061015f91906111d2565b610a1a565b005b610180600480360381019061017b91906113ef565b610c8d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9336040518263ffffffff1660e01b81526004016101db919061129b565b602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c919061145b565b61025b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610252906114e5565b60405180910390fd5b6001600087815260200190815260200160002060040160149054906101000a900460ff16156102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b690611551565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600088815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a906115bd565b60405180910390fd5b60003342604051602001610378929190611646565b6040516020818303038152906040528051906020012060001c905060405180606001604052808881526020014281526020016040518060e001604052808981526020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152508152506003600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002016000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509050507fcc3b754f76b710137fc464bbebc86e795542475cf6fdac7b570c72889b9fe86333828960405161054d93929190611681565b60405180910390a150505050505050565b60006001600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105a6611098565b600160008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9336040518263ffffffff1660e01b815260040161075c919061129b565b602060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d919061145b565b6107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d3906114e5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600088815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790611704565b60405180910390fd5b6040518060e001604052808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008881526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505085600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9336040518263ffffffff1660e01b8152600401610a73919061129b565b602060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab4919061145b565b610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea906114e5565b60405180910390fd5b6040518060e001604052808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008881526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505085600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f16dfbe9336040518263ffffffff1660e01b8152600401610ce6919061129b565b602060405180830381865afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d27919061145b565b610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d906114e5565b60405180910390fd5b80600360008481526020019081526020016000206000015414610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db590611770565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5990611802565b60405180910390fd5b42620151806003600085815260200190815260200160002060010154610e889190611851565b11610ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebf906118d1565b60405180910390fd5b6003600083815260200190815260200160002060020160016000838152602001908152602001600020600082015481600001556001820154816001015560028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004820160149054906101000a900460ff168160040160146101000a81548160ff0219169083151502179055506005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600260006003600086815260200190815260200160002060020160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b6000819050919050565b61111b81611108565b811461112657600080fd5b50565b60008135905061113881611112565b92915050565b6000819050919050565b6111518161113e565b811461115c57600080fd5b50565b60008135905061116e81611148565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119f82611174565b9050919050565b6111af81611194565b81146111ba57600080fd5b50565b6000813590506111cc816111a6565b92915050565b60008060008060008060c087890312156111ef576111ee611103565b5b60006111fd89828a01611129565b965050602061120e89828a0161115f565b955050604061121f89828a0161115f565b945050606061123089828a0161115f565b935050608061124189828a0161115f565b92505060a061125289828a016111bd565b9150509295509295509295565b60006020828403121561127557611274611103565b5b600061128384828501611129565b91505092915050565b61129581611194565b82525050565b60006020820190506112b0600083018461128c565b92915050565b6112bf8161113e565b82525050565b6112ce81611194565b82525050565b60008115159050919050565b6112e9816112d4565b82525050565b60e08201600082015161130560008501826112b6565b50602082015161131860208501826112b6565b50604082015161132b60408501826112b6565b50606082015161133e60608501826112b6565b50608082015161135160808501826112c5565b5060a082015161136460a08501826112e0565b5060c082015161137760c08501826112c5565b50505050565b600060e08201905061139260008301846112ef565b92915050565b6000602082840312156113ae576113ad611103565b5b60006113bc848285016111bd565b91505092915050565b6113ce81611108565b82525050565b60006020820190506113e960008301846113c5565b92915050565b6000806040838503121561140657611405611103565b5b60006114148582860161115f565b925050602061142585828601611129565b9150509250929050565b611438816112d4565b811461144357600080fd5b50565b6000815190506114558161142f565b92915050565b60006020828403121561147157611470611103565b5b600061147f84828501611446565b91505092915050565b600082825260208201905092915050565b7f4d757374206265207061727469636970616e7400000000000000000000000000600082015250565b60006114cf601383611488565b91506114da82611499565b602082019050919050565b600060208201905081810360008301526114fe816114c2565b9050919050565b7f4b657920616c7265616479207265676973746572656400000000000000000000600082015250565b600061153b601683611488565b915061154682611505565b602082019050919050565b6000602082019050818103600083015261156a8161152e565b9050919050565b7f43616e6e6f742072657175657374206f776e206b657900000000000000000000600082015250565b60006115a7601683611488565b91506115b282611571565b602082019050919050565b600060208201905081810360008301526115d68161159a565b9050919050565b60008160601b9050919050565b60006115f5826115dd565b9050919050565b6000611607826115ea565b9050919050565b61161f61161a82611194565b6115fc565b82525050565b6000819050919050565b61164061163b8261113e565b611625565b82525050565b6000611652828561160e565b601482019150611662828461162f565b6020820191508190509392505050565b61167b8161113e565b82525050565b6000606082019050611696600083018661128c565b6116a36020830185611672565b6116b060408301846113c5565b949350505050565b7f4f6e6c79206f776e65722063616e207570646174652064617461000000000000600082015250565b60006116ee601a83611488565b91506116f9826116b8565b602082019050919050565b6000602082019050818103600083015261171d816116e1565b9050919050565b7f50726f706f73616c496420646f6573206e6f74206d61746368206b6579000000600082015250565b600061175a601d83611488565b915061176582611724565b602082019050919050565b600060208201905081810360008301526117898161174d565b9050919050565b7f4f6e6c79206f776e65722063616e20617574686f72697a65206b65792074726160008201527f6e73666572000000000000000000000000000000000000000000000000000000602082015250565b60006117ec602583611488565b91506117f782611790565b604082019050919050565b6000602082019050818103600083015261181b816117df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185c8261113e565b91506118678361113e565b925082820190508082111561187f5761187e611822565b5b92915050565b7f50726f706f73616c206578706972656400000000000000000000000000000000600082015250565b60006118bb601083611488565b91506118c682611885565b602082019050919050565b600060208201905081810360008301526118ea816118ae565b905091905056fea26469706673582212203bdad152065d6146f75869afbf5eda6c0bea49cc5cf55fde6e4571011e3fde9b64736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class KeyDictionary__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(token, overrides) {
        return super.getDeployTransaction(token, overrides || {});
    }
    deploy(token, overrides) {
        return super.deploy(token, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.KeyDictionary__factory = KeyDictionary__factory;
KeyDictionary__factory.bytecode = _bytecode;
KeyDictionary__factory.abi = _abi;
